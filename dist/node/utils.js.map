{"version":3,"sources":["utils.js"],"names":[],"mappings":"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","file":"utils.js","sourcesContent":["import { Channel, Transactor } from \"./channels.js\";\n\n\nclass AltsTransactor extends Transactor {\n  constructor(offer, commitCb) {\n    super(offer);\n    this.commitCb = commitCb;\n  }\n  commit() {\n    this.commitCb();\n    return super.commit();\n  }\n}\n\n\nexport function alts(race) {\n  let outCh = new Channel();\n\n  let transactors = race.map(cmd => {\n    let tx;\n\n    if(Array.isArray(cmd)) {\n      let [ ch, val ] = cmd;\n\n      tx = new AltsTransactor(val, () => {\n        transactors.forEach(h => h.active = false);\n      });\n\n      ch.fill(val, tx).deref(function() {\n        outCh.fill([ val, ch ]).deref(() => outCh.close());\n      });\n\n    } else {\n\n      tx = new AltsTransactor(true, () => {\n        transactors.forEach(h => h.active = false);\n      });\n\n      cmd.drain(tx).deref(function(val) {\n        outCh.fill([ val, cmd ]).deref(() => outCh.close());\n      });\n    }\n\n    return tx;\n  });\n\n  return outCh;\n}\n\nexport function timeout(ms) {\n  var ch = new Channel();\n  setTimeout(() => { ch.close(); }, ms);\n  return ch;\n}\n\nexport function pipelineAsync(inch, converter, outch, shouldCloseDownstream = false) {\n  function take(val) {\n    if(val !== null) {\n      Promise.resolve(converter(val)).then(function(converted) {\n        outch.put(converted).then(function(didPut) {\n          if(didPut) {\n            inch.take().then(take);\n          }\n        });\n      });\n    } else if(shouldCloseDownstream) {\n      outch.close();\n    }\n  }\n\n  inch.take().then(take);\n}\n\n// Enforces order resolution on resulting channel\n// This might need to be the default behavior, though that requires more thought\nexport function order(inch, sizeOrBuf) {\n  var outch = new Channel(sizeOrBuf);\n\n  function drain() {\n    inch.take().then(val => {\n      if(val === null) {\n        outch.close();\n      } else {\n        outch.put(val).then(drain);\n      }\n    });\n  }\n  drain();\n\n  return outch;\n}\n"],"sourceRoot":"/source/"}